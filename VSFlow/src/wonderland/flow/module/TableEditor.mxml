<?xml version="1.0" encoding="utf-8"?>
<std:STDModule xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" layout="absolute" width="100%" height="100%"
			   implements="wonderland.flow.module.ISTDModule" xmlns:std="wonderland.flow.module.*"
			   creationComplete="init()">

	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.advancedDataGridClasses.AdvancedDataGridColumn;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.controls.listClasses.ListRowInfo;
			import mx.managers.PopUpManager;
			import mx.rpc.Fault;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import wonderland.comm.ControllerClient;
			import wonderland.flow.view.RowEditBox;
			import wonderland.view.ReloadingList;
			
			private var cnt:ControllerClient;
			private var setAction:String;
			private var listAction:String;
			private var deleteAction:String;
			
			[Bindable] private var dataProvider:ArrayCollection = new ArrayCollection();
			
			private function init():void{
				createColumns(paramData["columns"]);
				
				setAction = paramData["set"];
				listAction = paramData["list"];
				deleteAction = paramData["delete"];
				
				initController(paramData["controller"]);
				
				loadList();
			}
			
			public function set overrideParams(o:Object):void{
				paramData = o;
			}
			
			private function initController(controllerName:String):void{
				cnt = new ControllerClient(server+controllerName);
			}
			
			private function loadList():void{
				var d:Object = new Object();
				d["data"] = new Object();
				cnt.call(listAction,d,loadListResult,fault);				
			}
			
			private function loadListResult(e:ResultEvent):void{
				dataProvider.source = JSON.decode(String(e.result));
			}
			
			private function fault(e:FaultEvent):void{
				Alert.show(e.fault.message,"Server Error");
			}
			
			public function setItem(o:Object):void{
				var d:Object = new Object();
				d["data"] = o;
				cnt.call(setAction,d,setItemResult,fault);
			}
			
			private function setItemResult(e:ResultEvent):void{
				var res:Object = JSON.decode(String(e.result));
				if (res.hasOwnProperty("ok")){
					loadList();
				}else{
					Alert.show(JSON.encode(res["error"]),"Server Error while SET:");
				}
			}
			
			private function deleteItem(o:Object):void{
				if(o==null){
					return;
				}
				
				var d:Object = new Object();
				d["data"] = o;
				cnt.call(deleteAction,d,deleteItemResult,fault);
			}
			
			private function deleteItemResult(e:ResultEvent):void{
				var res:Object = JSON.decode(String(e.result));
				if (res.hasOwnProperty("ok")){
					loadList();
				}else{
					Alert.show(JSON.encode(res["error"]),"Server Error while DELETE");
				}
			}
			
			private function createColumns(columns:Array):void{
				var tmp:Array = new Array();
				
				for each(var column:Object in columns){
					var dColumn:AdvancedDataGridColumn = new AdvancedDataGridColumn(column["name"]);
					dColumn.dataField = column["field"];
					if (column["field"]=="id"){
						dColumn.width = 80;
					}
					tmp.push(dColumn);
					
				}
				dataGrid.columns = tmp;
				invalidateDisplayList();
			}
			
			
			private function openRowEditor(o:Object, isNew:Boolean = false):void{
				var win:RowEditBox = RowEditBox(PopUpManager.createPopUp(this,RowEditBox,false));
				win.fields = paramData["columns"];
				if(isNew){
					o["id"] = null;
				}
				
				win.data = o;
				win.te = this;
				PopUpManager.centerPopUp(win);
			}
			
			
			protected function edit(event:MouseEvent):void
			{
				openRowEditor(dataGrid.selectedItem);
			}
			
			public function get selected():Object{
				return dataGrid.selectedItem;
			}
			
		]]>
	</fx:Script>

	<fx:Metadata>
		[Event(name="select", type="flash.events.Event")]
	</fx:Metadata>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:HGroup width="100%" height="100%">
		<mx:AdvancedDataGrid id="dataGrid" width="100%" height="100%" rowHeight="28" 
							 doubleClickEnabled="{!readOnly}" doubleClick="edit(event)" dataProvider="{dataProvider}" 
							 click="this.dispatchEvent(new Event('select'))" contentBackgroundAlpha="0.4">
			
		</mx:AdvancedDataGrid>
		<s:VGroup horizontalAlign="center" height="309">
			<mx:Spacer height="60"/>
			<s:Label text="Read Only" fontWeight="bold" color="#CA0202" visible="{readOnly}"/>
			<mx:Spacer/>
			<mx:VBox cornerRadius="5" height="190" horizontalAlign="center" verticalAlign="middle" width="68" x="-5" dropShadowVisible="true" backgroundColor="#EAEAEA">
				<mx:Button icon="@Embed(source='../../../assets/images/png/add_48x48.png')"
						   width="52" height="52" enabled="{!readOnly}" click="openRowEditor(new Object())" toolTip="New"/>
				<mx:Button icon="@Embed(source='../../../assets/images/png/copy_48x48.png')"
						   width="52" height="52" enabled="{!readOnly}" click="openRowEditor(dataGrid.selectedItem,true)" toolTip="Duplicate"/>
				<mx:Button icon="@Embed(source='../../../assets/images/png/delete_48x48.png')"
						   width="52" height="52" enabled="{(!readOnly)}" click="deleteItem(dataGrid.selectedItem)" toolTip="Delete"/>
					
			</mx:VBox>
			<mx:Spacer/>
		</s:VGroup>
		<mx:Spacer/>
	</s:HGroup>
	
</std:STDModule>