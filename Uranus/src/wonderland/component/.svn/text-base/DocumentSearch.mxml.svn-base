<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:view="wonderland.view.*">
	<fx:Metadata>
		[Event(name="select", type="flash.events.Event")]
		
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import wonderland.documents.controller.DocumentControllerClient;
			import wonderland.flow.view.SearchUserBox;
			
			[Bindable] public var doc_typeDP:Array;
			[Bindable] public var groupDP:Array;
			[Bindable] public var doc_statusDP:Array;
			
			public const DOCUMENT:String = "document";
			public const DOCUMENT_VERSION:String = "document_version";
			[Bindable] public var selectable:String = "document";
			
			[Bindable] public var serverURL:String;
			
			[Bindable] private var documentsDP:ArrayCollection = new ArrayCollection();
			
			public function search(event:MouseEvent=null):void{
				var cnt:DocumentControllerClient = new DocumentControllerClient(serverURL);
				gear.doRunRun = true;
				
				if(!advancedSearchPannel.visible){
					clearAdvancedPreferences();
				}
				
				cnt.listDocuments(searchTXT.text,
					(groups.selectedItem ? groups.selectedItem["id"] : null),
					(docTypes.selectedItem ? docTypes.selectedItem["id"] : null),
					(scopedUser ? scopedUser["id"] : null),
					(docStats.selectedItem ? docStats.selectedItem["id"] : null),
					listDocumentsResult,fault);
			}
			
			private function listDocumentsResult(e:ResultEvent):void{
				gear.doRunRun = false;
				documentsDP.source = JSON.decode(String(e.result));
				if(documentsDP.length==0){
					Alert.show("No results for this search","Info");
				}
			}
			
			private function fault(e:FaultEvent):void{
				Alert.show(e.fault.message,"Server Error");
			}
			
			
			/////////////////////////////////////////////////////////////////////////////////////
			// setting User Scope
			
			[Bindable] private var scopedUser:Object = null;
			[Bindable] private var scopeUserLabel:String = "Author: Everyone";
			protected function setUserScope(event:MouseEvent):void
			{
				scopeUserLabel = "Choose an Author";
				var win:SearchUserBox = SearchUserBox(PopUpManager.createPopUp(this,SearchUserBox,true));
				win.server = serverURL;
				win.addEventListener(Event.SELECT,setAuthor);
				PopUpManager.centerPopUp(win);
			}
			
			private function setAuthor(e:Event):void{
				var win:SearchUserBox = e.target as SearchUserBox;
				scopedUser = win.selected;
				if(scopedUser!=null){
					scopeUserLabel = "By: "+ scopedUser["name"] + " " + scopedUser["l_name"];	
				}else{
					scopeUserLabel = "Author: Everyone";
				}
				
			}
			
			/////////////////////////////////////////////////////////////////////////////////////////

			protected function enableAdvancedSearch(event:MouseEvent):void
			{
				advancedSearchPannel.visible = !advancedSearchPannel.visible;
				clearAdvancedPreferences();
			}
			
			private function clearAdvancedPreferences():void{
				docTypes.selectedIndex = -1;
				groups.selectedIndex = -1;
				docStats.selectedIndex = -1;
				scopeUserLabel = "Author: Everyone";
				scopedUser = null;
			}

			/////////////////////////////////////////////////////////////////////////////////////////
			
			
			protected function openDocument(event:MouseEvent):void{
				if(adg1.selectedItem!=null){
					if(adg1.selectedItem["type"] == selectable){
						this.dispatchEvent(new Event(Event.SELECT));	
					}
					 
				}
			}
			
			public function get selectedDocument():Object{
				return adg1.selectedItem;
			}
			


			protected function newDocument(event:MouseEvent):void
			{
				adg1.selectedItem = null;
				this.dispatchEvent(new Event(Event.SELECT));
			}

		]]>
	</fx:Script>

	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:VGroup width="100%" height="100%">
		<mx:ApplicationControlBar width="100%">
			<mx:VBox width="100%" height="100%" verticalAlign="middle">
				<s:TextInput id="searchTXT" width="100%" enter="search(null)"/>
				<mx:HBox width="100%">
					<mx:HBox id="advancedSearchPannel" width="100%" visible="false">
						<mx:Label text="By Type:"/>
						<mx:ComboBox id="docTypes" editable="false"  dataProvider="{doc_typeDP}"
									 labelField="name" ></mx:ComboBox>
						<mx:Label text="Program"/>
						<mx:ComboBox id="groups" editable="false"  dataProvider="{groupDP}"
									 labelField="name" ></mx:ComboBox>
						
						<mx:Label text="Status"/>
						<mx:ComboBox id="docStats" editable="false"  dataProvider="{doc_statusDP}"
									 labelField="name" ></mx:ComboBox>
						<mx:LinkButton label="{scopeUserLabel}" click="setUserScope(event)"/>
						
					</mx:HBox>
					<mx:Button icon="@Embed(source='../../assets/images/png/zoom+_16x16.png')" width="22" height="22"
							   click="enableAdvancedSearch(event)"/>
				</mx:HBox>
			</mx:VBox>
			<s:Group>
				<view:Gear id="gear" width="100%" height="100%" alpha="0.3"/>
				<mx:Button icon="@Embed(source='../../assets/images/png/search_48x48.png')" width="58" height="58" 
						   click="search(event)"/>
					
			</s:Group>
			<mx:Button icon="@Embed(source='../../assets/images/png/new_48x48.png')" width="58" height="58" 
					   click="newDocument(event)"/>
			
		</mx:ApplicationControlBar>
		<mx:AdvancedDataGrid id="adg1" designViewDataType="tree" width="100%" height="100%"  
							 doubleClickEnabled="true" doubleClick="openDocument(event)" contentBackgroundAlpha="0.0"
							 defaultLeafIcon="@Embed(source='assets/images/png/edit file_16x16.png')"
							 folderOpenIcon="@Embed(source='assets/images/png/documents_16x16.png')"
							 folderClosedIcon="@Embed(source='assets/images/png/documents_16x16.png')">
			<mx:dataProvider>
				<mx:HierarchicalData source="{documentsDP}"/>
			</mx:dataProvider>
			<mx:columns>
				<mx:AdvancedDataGridColumn headerText="ID" dataField="id" width="100"/>
				<mx:AdvancedDataGridColumn headerText="Title" dataField="name"/>
				<mx:AdvancedDataGridColumn headerText="Revisions" dataField="number_of_versions"  width="100"/>
				<mx:AdvancedDataGridColumn headerText="Creation Date" dataField="created_at"  width="200"/>
				<mx:AdvancedDataGridColumn headerText="Status" dataField="doc_stat"  width="100"/>
				
			</mx:columns>
		</mx:AdvancedDataGrid>
	</s:VGroup>
</s:Group>
